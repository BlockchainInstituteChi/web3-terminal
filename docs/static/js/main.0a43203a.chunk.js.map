{"version":3,"sources":["index.js"],"names":["ipfs_node","bip39","validateMnemonic","mnemonicToSeedSync","generateMnemonic","mnemonicToEntropy","web3Commands","Web3TerminalDropper","props","state","history","structure","extensions","onDrop","bind","addToStructure","this","Web3terminal","setState","concat","value","files","event","_this","console","log","reader","FileReader","onabort","onerror","onload","output","result","newFile","name","readAsBinaryString","dataTransfer","content","push","qs","parse","window","location","search","ignoreQueryPrefix","iframe","document","getElementById","className","children","React","Component","_log","addToHistory","arguments","apply","args","sudo","exec","cwd","docs","Object","assign","map","hash","flags","response","sha256","mnemonic","str","i","concatArgsToString","keys","length","ipfs","startIpfs","stop","cb","a","create","file1","file2","dir2","file","public","file3","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.0a43203a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Terminal from 'react-bash';\nimport sha256 from 'sha256';\nimport { validateMnemonic, mnemonicToSeedSync, generateMnemonic, mnemonicToEntropy } from 'bip39';\nimport ipfs from 'ipfs';\nimport qs from 'query-string';\nimport FileDrop from 'react-file-drop';\n\n// REMINDER: figure out how to handle the state changes of the web3terminal from the web3terminaldropper as a child class. think back to the tic tac toe game\n\nconst bip39 = { validateMnemonic, mnemonicToSeedSync, generateMnemonic, mnemonicToEntropy };\n\nconst web3Commands = ['- hash', '- bip39', '- ipfs'];\n\nvar ipfs_node;\n\nclass Web3TerminalDropper extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            history: history,\n            structure: structure,\n            extensions: extensions\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.addToStructure = this.addToStructure.bind(this);\n    }\n\n    render () {\n        return (\n            <FileDrop onDrop={this.onDrop} >\n                <Web3terminal props={this.state} />\n            </FileDrop>\n        )\n    }\n\n    addOne (   ) {\n        this.setState({ \n            'history' : this.state.history.concat(\n                    { value: 'Upload complete!' },\n                ),\n            'extensions' : this.state.extensions,\n            'structure' : this.state.structure\n        });\n\n    }\n\n    onDrop ( files, event ) {\n        var _this = this;\n\n        console.log()\n    \n        const reader = new FileReader()\n\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = () => {\n            var output = reader.result;\n\n            var newFile = {\n                \"name\" : files[0].name,\n                \"content\" : output,\n            }\n            _this.addToStructure( newFile );\n\n        }\n\n        reader.readAsBinaryString(event.dataTransfer.files[0])\n\n    }    \n\n    addToStructure (newFile) {\n        var state = this.state;\n        \n        state.structure[ newFile.name ] = { \n            \"content\" : newFile.content\n        };\n\n        state.history.push({\n            \"value\" : \"New file added: \" + newFile.name\n        })\n\n        this.setState(state);      \n    }\n\n    componentDidMount ( props ) {\n\n        function setIframeFormat () {\n            var iframe = qs.parse(window.location.search, { ignoreQueryPrefix: true }).iframe;\n            // console.log('iframe', iframe)\n            if ( iframe === 'true' ) {\n                document.getElementById('app').className = \"iframe\";\n                document.getElementById('app').children[0].children[0].className = \"hidden\"; \n            } \n        }\n\n        setIframeFormat();\n\n    }\n}\n\nclass Web3terminal extends React.Component {\n\n    constructor ( props ) {\n        super(props);\n        this.state = props.props;\n\n    }\n\n    render ( ) {\n        return (\n            <Terminal history={this.state.history} structure={this.state.structure} extensions={this.state.extensions} />\n        )\n    }\n\n    componentWillReceiveProps( props ) {\n        this.setState({ \n            'history' : props.props.history,\n            'extensions' : props.props.extensions,\n            'structure' : props.props.structure\n        });\n    }\n\n    componentDidMount ( props ) {\n\n        const _this = this;\n        const _log = console.log;\n\n        return (\n            console.log = function () {\n                _this.addToHistory(arguments);\n                return _log.apply(console, arguments);\n            }\n        );\n\n    }\n\n    addToHistory ( args ) {\n\n        this.setState({\n                history: this.state.history.concat(\n                    { value: args },\n                ),\n            })\n\n    }  \n\n}\n\nconst extensions = {\n    sudo: {\n        exec: ({ structure, history, cwd }) => {\n            return { structure, cwd,\n                history: history.concat({ value: 'Nice try... (ಠ(ಠ(ಠ_ಠ)ಠ)ಠ)' }),\n            };\n        },\n    },\n    docs : {\n    \texec: (state) => {\n\t        return Object.assign({}, state, {\n\t            history: state.history.concat(\n\t                { value: 'Web3-Terminal:' },\n\t                { value: 'These commands can be used for web3 functionality. Type \\'docs\\' to see this list.' },\n\t                ...web3Commands.map(value => ({ value }))\n\t            ),\n\t        });\n\t    },\n    },\n    hash : {\n        exec: (state, { flags, args }) => {\n\n            var response = \"\";\n\n            if ( args[0] ) {\n                response = sha256(args[0]);\n            } else {\n                response = \"Please pass a string after the hash command. i.e. 'hash myTestString'\";\n            }\n\n            return Object.assign({}, state, {\n                history: state.history.concat(\n                    { value: response }\n                ),\n            });\n        },\n    },\n    bip39 : {\n        exec: (state, { flags, args }) => {\n\n            var response = \"\";\n            console.log('args', args)\n            var mnemonic = concatArgsToString( args );\n            console.log('mnemonic', mnemonic)\n\n            if ( Object.keys(args).length > 0 ) {\n            \tif ( args['generateMnemonic'] === 'true' ) {\n            \t\tresponse = bip39.generateMnemonic();\n            \t} else if ( args['mnemonicToEntropy'] ) {\n            \t\tresponse = \"Mnemonic Entropy: \" + bip39.mnemonicToEntropy( mnemonic );\n            \t} else if ( args['validateMnemonic'] ) {\n            \t\tresponse = \"Mnemonic Valid: \" + bip39.validateMnemonic( mnemonic );\n            \t}\n            } else {\n\t\t        return Object.assign({}, state, {\n\t\t            history: state.history.concat(\n\t\t                { value: 'bip39:' },\n\t\t                { value: 'This command can be used to generate HD wallets:' },\n\t\t                { value: 'Pass `--generateMnemonic true` to create a new BIP39 mnemonic ' },\n\t\t                { value: 'Pass `your mnemonic string of words separated by spaces --validateMnemonic true` to validate a mnemonic' },\n\t\t                { value: 'Pass `your mnemonic string of words separated by spaces --mnemonicToEntropy true` to calculate the entropy of a known mnemonic' },\n\t\t            ),\n\t\t        });\n            }\n\n            console.log('response is ', response);\n\n            return Object.assign({}, state, {\n                history: state.history.concat(\n                    { value: response }\n                ),\n            });\n        },\n    },\n    ipfs : {\n        exec: (state, { flags, args }) => {\n\n            if ( Object.keys(args).length > 0 ) {\n\n                if ( args[0] === 'start' ) {\n                   if ( typeof(ipfs_node) === \"undefined\" || ipfs_node === null ) {\n                        startIpfs(function(ipfs_node) {\n\n                       });\n                   } else {\n                     return Object.assign({}, state, {\n                                history: state.history.concat(\n                                    { value: \"IPFS Node already running.\" }\n                                ),\n                            }); \n                   }\n                   \n\n                } else if ( args[0] === 'stop' ) {\n\n                    ipfs_node.stop();\n                    ipfs_node = null;\n\n                    return Object.assign({}, state, {\n                        history: state.history.concat(\n                            { value: \"IPFS Node shutting down...\" }\n                        ),\n                    }); \n\n                } else {\n                    \n                }\n                \n            } else {\n                return Object.assign({}, state, {\n                    history: state.history.concat(\n                        { value: 'ipfs:' },\n                        { value: 'The Interplanetary File System allows users to share files peer-to-peer:' },\n                        { value: 'Try `ipfs start` to run a node.' },\n                    ),\n                });\n            }\n\n            async function startIpfs (cb) {\n                Object.assign({}, state, {\n                                history: state.history.concat(\n                                    { value: \"IPFS Node starting...\" }\n                                ),\n                            }); \n                ipfs_node = await ipfs.create()\n\n                cb(ipfs_node)\n                \n            }\n\n\n        }\n    }\n};\n\nfunction concatArgsToString ( args ) {\n\tvar str = \"\";\n\tvar i = 0;\n\n\tdo {\n\n\t\tstr += args[i] + \" \";\n\t\ti++;\n\n\t} while ( typeof(args[i]) != \"undefined\" );\n\n\treturn str;\n\n}\n\nfunction concatArgsToArray ( args ) {\n\tvar arr = [];\n\tvar i = 0;\n\n\tdo {\n\n\t\tarr.push(args[i]);\n\t\ti++;\n\n\t} while ( typeof(args[i]) != \"undefined\" );\n\n\treturn arr;\n\n}\n\nconst history = [\n    { value: 'Welcome to our Web3 Terminal' },\n    { value: 'Try out your commands here safely and become an expert in no time.' },\n    { value: 'Powered by The Blockchain Institute - Visit https://weteachblockchain.org/ for more great tools!' },\n    { value: 'Type `help` for general tips or `docs` for web3 specific options.' },\n    { value: 'You can also click and drag files onto the terminal to add them to the root directory.' },\n    \n];\n\nconst structure = {\n    '.hidden': {\n        file1: { content: 'The is the content for file1 in the <.hidden> directory.' },\n        file2: { content: 'The is the content for file2 in the <.hidden> directory.' },\n        dir2: {\n            file: { content: 'The is the content for <file> in the <.hidden> directory.' },\n        },\n        '.secrets': { content: 'I\\'m still afraid of the dark...' },\n    },\n    public: {\n        file1: { content: 'The is the content for file1 in the <public> directory.' },\n        file2: { content: 'The is the content for file2 in the <public> directory.' },\n        file3: { content: 'The is the content for file3 in the <public> directory.' },\n    },\n    'README.md': { content: '✌⊂(✰‿✰)つ✌ Thanks for checking out the tool! There is a lot that you can do with react-bash and I\\'m excited to see all of the fun commands and projects build on top of it!' },\n};\n\nconst Root = <Web3TerminalDropper />;\nReactDOM.render(Root, document.getElementById('app'));"],"sourceRoot":""}