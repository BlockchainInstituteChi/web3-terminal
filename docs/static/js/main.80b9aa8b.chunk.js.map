{"version":3,"sources":["index.js"],"names":["bip39","validateMnemonic","mnemonicToSeedSync","generateMnemonic","mnemonicToEntropy","web3Commands","Web3terminal","props","_this","this","_log","console","log","addToHistory","arguments","apply","args","setState","history","state","concat","value","Terminal","extensions","sudo","exec","structure","cwd","docs","Object","assign","map","hash","flags","response","sha256","mnemonic","str","i","concatArgsToString","keys","length","ipfs","create","Root","file1","content","file2","dir2","file","public","file3","ReactDOM","render","document","getElementById"],"mappings":"0eAOMA,EAAQ,CAAEC,oCAAkBC,wCAAoBC,oCAAkBC,uCAElEC,EAAe,CAAC,SAAU,UAAW,UAGrCC,E,0LAEkBC,GAEhB,IAAMC,EAAQC,KACRC,EAAOC,QAAQC,IAErB,OACID,QAAQC,IAAM,WAEV,OADAJ,EAAMK,aAAaC,WACZJ,EAAKK,MAAMJ,QAASG,c,mCAMxBE,GAEXP,KAAKQ,SAAS,CACNC,QAAST,KAAKU,MAAMD,QAAQE,OACxB,CAAEC,MAAOL,U,GApBFM,KA6BrBC,EAAa,CACfC,KAAM,CACFC,KAAM,YAAkC,IAA/BC,EAA8B,EAA9BA,UAAWR,EAAmB,EAAnBA,QAChB,MAAO,CAAEQ,YAAWC,IADe,EAAVA,IAErBT,QAASA,EAAQE,OAAO,CAAEC,MAAO,+DAI7CO,KAAO,CACNH,KAAM,SAACN,GAAW,IAAD,EACb,OAAOU,OAAOC,OAAO,GAAIX,EAAO,CAC5BD,SAAS,EAAAC,EAAMD,SAAQE,OAAd,SACL,CAAEC,MAAO,kBACT,CAAEA,MAAO,qFAFJ,mBAGFhB,EAAa0B,IAAI,SAAAV,GAAK,MAAK,CAAEA,kBAK7CW,KAAO,CACHP,KAAM,SAACN,EAAD,GAA4B,EAAlBc,MAAmB,IAAZjB,EAAW,EAAXA,KAEfkB,EAAW,GAQf,OALIA,EADClB,EAAK,GACKmB,IAAOnB,EAAK,IAEZ,wEAGRa,OAAOC,OAAO,GAAIX,EAAO,CAC5BD,QAASC,EAAMD,QAAQE,OACnB,CAAEC,MAAOa,QAKzBlC,MAAQ,CACJyB,KAAM,SAACN,EAAD,GAA4B,EAAlBc,MAAmB,IAAZjB,EAAW,EAAXA,KAEfkB,EAAW,GACfvB,QAAQC,IAAI,OAAQI,GACpB,IAAIoB,EA8DhB,SAA8BpB,GAC7B,IAAIqB,EAAM,GACNC,EAAI,EAER,GAECD,GAAOrB,EAAKsB,GAAK,IACjBA,UAE4B,oBAAZtB,EAAKsB,IAEtB,OAAOD,EAzEmBE,CAAoBvB,GAGnC,OAFAL,QAAQC,IAAI,WAAYwB,GAEnBP,OAAOW,KAAKxB,GAAMyB,OAAS,GACG,SAA7BzB,EAAI,iBACRkB,EAAWlC,EAAMG,mBACNa,EAAI,kBACfkB,EAAW,qBAAuBlC,EAAMI,kBAAmBgC,GAChDpB,EAAI,mBACfkB,EAAW,mBAAqBlC,EAAMC,iBAAkBmC,IAc1DzB,QAAQC,IAAI,eAAgBsB,GAErBL,OAAOC,OAAO,GAAIX,EAAO,CAC5BD,QAASC,EAAMD,QAAQE,OACnB,CAAEC,MAAOa,OAfZL,OAAOC,OAAO,GAAIX,EAAO,CAC5BD,QAASC,EAAMD,QAAQE,OACnB,CAAEC,MAAO,UACT,CAAEA,MAAO,oDACT,CAAEA,MAAO,kEACT,CAAEA,MAAO,2GACT,CAAEA,MAAO,uIAcvBqB,KAAO,CACHjB,KAAM,SAACN,EAAD,GAA4B,EAAlBc,MAAmB,IAAZjB,EAAW,EAAXA,KAEnB,OAAKa,OAAOW,KAAKxB,GAAMyB,OAAS,EAEX,UAAZzB,EAAK,IACN0B,IAAKC,SACEd,OAAOC,OAAO,GAAIX,EAAO,CAC5BD,QAASC,EAAMD,QAAQE,OACnB,CAAEC,MAAO,kCAJrB,EAYOQ,OAAOC,OAAO,GAAIX,EAAO,CAC5BD,QAASC,EAAMD,QAAQE,OACnB,CAAEC,MAAO,SACT,CAAEA,MAAO,4EACT,CAAEA,MAAO,yCAuCjC,IAyBMuB,EAAO,kBAACtC,EAAD,CAAcY,QAzBX,CACZ,CAAEG,MAAO,gCACT,CAAEA,MAAO,sEACT,CAAEA,MAAO,oGACT,CAAEA,MAAO,sEAqBgCK,UAlB3B,CACd,UAAW,CACPmB,MAAO,CAAEC,QAAS,4DAClBC,MAAO,CAAED,QAAS,4DAClBE,KAAM,CACFC,KAAM,CAAEH,QAAS,8DAErB,WAAY,CAAEA,QAAS,oCAE3BI,OAAQ,CACJL,MAAO,CAAEC,QAAS,2DAClBC,MAAO,CAAED,QAAS,2DAClBK,MAAO,CAAEL,QAAS,4DAEtB,YAAa,CAAEA,QAAS,kNAIuCvB,WAAYA,IAC/E6B,IAASC,OAAOT,EAAMU,SAASC,eAAe,S","file":"static/js/main.80b9aa8b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Terminal from 'react-bash';\nimport sha256 from 'sha256';\nimport { validateMnemonic, mnemonicToSeedSync, generateMnemonic, mnemonicToEntropy } from 'bip39';\nimport ipfs from 'ipfs';\n\nconst bip39 = { validateMnemonic, mnemonicToSeedSync, generateMnemonic, mnemonicToEntropy };\n\nconst web3Commands = ['- hash', '- bip39', '- ipfs'];\n\n\nclass Web3terminal extends Terminal {\n\n    componentDidMount ( props ) {\n\n        const _this = this;\n        const _log = console.log;\n\n        return (\n            console.log = function () {\n                _this.addToHistory(arguments);\n                return _log.apply(console, arguments);\n            }\n        );\n\n    }\n\n    addToHistory ( args ) {\n\n        this.setState({\n                history: this.state.history.concat(\n                    { value: args },\n                ),\n            })\n\n    }  \n\n}\n\n\nconst extensions = {\n    sudo: {\n        exec: ({ structure, history, cwd }) => {\n            return { structure, cwd,\n                history: history.concat({ value: 'Nice try... (ಠ(ಠ(ಠ_ಠ)ಠ)ಠ)' }),\n            };\n        },\n    },\n    docs : {\n    \texec: (state) => {\n\t        return Object.assign({}, state, {\n\t            history: state.history.concat(\n\t                { value: 'Web3-Terminal:' },\n\t                { value: 'These commands can be used for web3 functionality. Type \\'docs\\' to see this list.' },\n\t                ...web3Commands.map(value => ({ value }))\n\t            ),\n\t        });\n\t    },\n    },\n    hash : {\n        exec: (state, { flags, args }) => {\n\n            var response = \"\";\n\n            if ( args[0] ) {\n                response = sha256(args[0]);\n            } else {\n                response = \"Please pass a string after the hash command. i.e. 'hash myTestString'\";\n            }\n\n            return Object.assign({}, state, {\n                history: state.history.concat(\n                    { value: response }\n                ),\n            });\n        },\n    },\n    bip39 : {\n        exec: (state, { flags, args }) => {\n\n            var response = \"\";\n            console.log('args', args)\n            var mnemonic = concatArgsToString( args );\n            console.log('mnemonic', mnemonic)\n\n            if ( Object.keys(args).length > 0 ) {\n            \tif ( args['generateMnemonic'] === 'true' ) {\n            \t\tresponse = bip39.generateMnemonic();\n            \t} else if ( args['mnemonicToEntropy'] ) {\n            \t\tresponse = \"Mnemonic Entropy: \" + bip39.mnemonicToEntropy( mnemonic );\n            \t} else if ( args['validateMnemonic'] ) {\n            \t\tresponse = \"Mnemonic Valid: \" + bip39.validateMnemonic( mnemonic );\n            \t}\n            } else {\n\t\t        return Object.assign({}, state, {\n\t\t            history: state.history.concat(\n\t\t                { value: 'bip39:' },\n\t\t                { value: 'This command can be used to generate HD wallets:' },\n\t\t                { value: 'Pass `--generateMnemonic true` to create a new BIP39 mnemonic ' },\n\t\t                { value: 'Pass `your mnemonic string of words separated by spaces --validateMnemonic true` to validate a mnemonic' },\n\t\t                { value: 'Pass `your mnemonic string of words separated by spaces --mnemonicToEntropy true` to calculate the entropy of a known mnemonic' },\n\t\t            ),\n\t\t        });\n            }\n\n            console.log('response is ', response);\n\n            return Object.assign({}, state, {\n                history: state.history.concat(\n                    { value: response }\n                ),\n            });\n        },\n    },\n    ipfs : {\n        exec: (state, { flags, args }) => {\n\n            if ( Object.keys(args).length > 0 ) {\n\n                if ( args[0] === 'start' ) {\n                    ipfs.create();\n                    return Object.assign({}, state, {\n                        history: state.history.concat(\n                            { value: \"IPFS Node starting...\" }\n                        ),\n                    }); \n                } else {\n                    \n                }\n                \n            } else {\n                return Object.assign({}, state, {\n                    history: state.history.concat(\n                        { value: 'ipfs:' },\n                        { value: 'The Interplanetary File System allows users to share files peer-to-peer:' },\n                        { value: 'Try `ipfs start` to run a node.' },\n                    ),\n                });\n            }\n\n        }\n    }\n};\n\nfunction concatArgsToString ( args ) {\n\tvar str = \"\";\n\tvar i = 0;\n\n\tdo {\n\n\t\tstr += args[i] + \" \";\n\t\ti++;\n\n\t} while ( typeof(args[i]) != \"undefined\" );\n\n\treturn str;\n\n}\n\nfunction concatArgsToArray ( args ) {\n\tvar arr = [];\n\tvar i = 0;\n\n\tdo {\n\n\t\tarr.push(args[i]);\n\t\ti++;\n\n\t} while ( typeof(args[i]) != \"undefined\" );\n\n\treturn arr;\n\n}\n\nconst history = [\n    { value: 'Welcome to our Web3 Terminal' },\n    { value: 'Try out your commands here safely and become an expert in no time.' },\n    { value: 'Powered by The Blockchain Institute - Visit https://weteachblockchain.org/ for more great tools!' },\n    { value: 'Type `help` for general tips or `docs` for web3 specific options.' },\n];\n\nconst structure = {\n    '.hidden': {\n        file1: { content: 'The is the content for file1 in the <.hidden> directory.' },\n        file2: { content: 'The is the content for file2 in the <.hidden> directory.' },\n        dir2: {\n            file: { content: 'The is the content for <file> in the <.hidden> directory.' },\n        },\n        '.secrets': { content: 'I\\'m still afraid of the dark...' },\n    },\n    public: {\n        file1: { content: 'The is the content for file1 in the <public> directory.' },\n        file2: { content: 'The is the content for file2 in the <public> directory.' },\n        file3: { content: 'The is the content for file3 in the <public> directory.' },\n    },\n    'README.md': { content: '✌⊂(✰‿✰)つ✌ Thanks for checking out the tool! There is a lot that you can do with react-bash and I\\'m excited to see all of the fun commands and projects build on top of it!' },\n};\n\n\nconst Root = <Web3terminal history={history} structure={structure} extensions={extensions} />;\nReactDOM.render(Root, document.getElementById('app'));"],"sourceRoot":""}